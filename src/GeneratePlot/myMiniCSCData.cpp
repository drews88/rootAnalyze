#include "../MiniCSCData.h"
/*

    *
    * NOTE: This file and the MiniCSCData.h file are not working for me locally. only on lxplus.
    * I do not know why. Ideally it is used locally due to how slow and limited lxplus is,
    * but until it is solved these files have to be used on lxplus.
    *

    This file is used to generate generic plots of the charge spectra, strip occupancy, and wire occupancy for the MiniCSC data.
    The .root files are generated by the MiniCSC CMSSW plugin.

    Remember to adjust the file path, source, and voltage for the plot labels, and the rootFileNameString to find the root file

    Link for Histogram types for more info: https://root.cern.ch/doc/master/group__Histograms.html

    Code can be easily adapted to get these plots for layer 2 if needed.

    Original Author: ??
*/
void myMiniCSCData()
{   
    
    //save path
    std::string filePath = "../../plots/GeneratePlot/";

    //Details for plot labelling 
    std::string source = "109Cd";
    std::string voltage = "3.6";
    
    //where to find the root file
    std::string rootFileNameString = "../../root_files/pins_rotated/L0raw1/output.root";

    //convert string to const char*
    const char* rootFileName = rootFileNameString.c_str();

    //create MiniCSCData object
    MiniCSCData data(rootFileName, true, true);

    //
    // Charge Spectra
    //

    std::vector<TH1D*> chargeSpectraHistAll = data.ChargeSpectra();

    // Layer 1 Charge Spectra
    TH1D* chargeSpectraL3 = chargeSpectraHistAll[2];
    chargeSpectraL3->Rebin(64);
    chargeSpectraL3->GetXaxis()->SetRangeUser(100.5, 4000.5);
    chargeSpectraL3->SetTitle(("Charge Spectra L1 | " + source + " | " + voltage + " kV").c_str());

    TCanvas* chargeSpectraL3Canvas = new TCanvas("c1","c1",1000,800);
    chargeSpectraL3->Draw();
    chargeSpectraL3Canvas->SaveAs((filePath + "ChargeSpectra_L1.png").c_str());
    delete chargeSpectraL3Canvas;

    //
    // Strip Occupancy
    //

    std::vector<TH1D*> StripOccupancyHistAll = data.StripOccupancy();

    // Layer 1 Strip Occupancy
    TH1D* StripOccupancyL1 = StripOccupancyHistAll[2];
    StripOccupancyL1->SetTitle(("Strip Occupancy L1 | " + source + " | " + voltage + " kV").c_str());

    TCanvas* StripOccupancyL1Canvas = new TCanvas("c1","c1",1000,800);
    StripOccupancyL1->Draw();
    StripOccupancyL1Canvas->SaveAs((filePath + "StripOccupancy_L1.png").c_str());
    delete StripOccupancyL1Canvas;

    //
    // Wire Occupancy
    //

    std::vector<TH1D*> WireOccupancyHistAll = data.WireOccupancy();

    // Layer 1 Wire Occupancy
    TH1D* WireOccupancyL1 = WireOccupancyHistAll[4];
    WireOccupancyL1->SetTitle(("Wire Occupancy L1 | " + source + " | " + voltage + " kV").c_str());

    TCanvas* WireOccupancyL1Canvas = new TCanvas("c1","c1",1000,800);
    WireOccupancyL1->Draw();
    WireOccupancyL1Canvas->SaveAs((filePath + "WireOccupancy_L1.png").c_str());
    delete WireOccupancyL1Canvas;

}
